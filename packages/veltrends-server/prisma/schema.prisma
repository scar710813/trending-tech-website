// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  // provider = "postgresql"
  // url      = env("DATABASE_URL")
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id           Int      @id @default(autoincrement())
  username     String   @unique
  passwordHash String
  createdAt    DateTime @default(now())

  Item  Item[]
  Token Token[]
}

model Token {
  id              Int      @id @default(autoincrement())
  user            User     @relation(fields: [userId], references: [id])
  userId          Int
  rotationCounter Int      @default(1)
  createdAt       DateTime @default(now())
  blocked         Boolean  @default(false)
}

model Item {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  link        String?
  thumbnail   String?
  tags        Tag[]
  siteInfo    SiteInfo? @relation(fields: [siteInfoId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user       User @relation(fields: [userId], references: [id])
  userId     Int
  siteInfoId Int?

  itemsTags ItemsTags[]
}

model SiteInfo {
  id      Int     @id @default(autoincrement())
  name    String
  favicon String?
  domain  String  @unique

  items Item[]
}

model Tag {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  Item      Item?       @relation(fields: [itemId], references: [id])
  itemId    Int?
  itemsTags ItemsTags[]
}

model ItemsTags {
  item   Item @relation(fields: [itemId], references: [id])
  itemId Int
  tag    Tag  @relation(fields: [tagId], references: [id])
  tagId  Int

  @@id([itemId, tagId])
  @@index(tagId)
  @@index(itemId)
}

model TagRelation {
  id          Int @id @default(autoincrement())
  tagId       Int
  originTagId Int

  @@index(tagId)
  @@index(originTagId)
}

model ItemLike {
  id     Int @id @default(autoincrement())
  itemId Int
  userId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([itemId, userId])
}
